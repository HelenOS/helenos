#
# Copyright (c) 2006 Martin Decky
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# - Redistributions of source code must retain the above copyright
#   notice, this list of conditions and the following disclaimer.
# - Redistributions in binary form must reproduce the above copyright
#   notice, this list of conditions and the following disclaimer in the
#   documentation and/or other materials provided with the distribution.
# - The name of the author may not be used to endorse or promote products
#   derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

## Configuration
#

ROOT_PATH = ..

VERSION_DEF = $(ROOT_PATH)/version

COMMON_MAKEFILE = $(ROOT_PATH)/Makefile.common
COMMON_HEADER = $(ROOT_PATH)/common.h

CONFIG_MAKEFILE = $(ROOT_PATH)/Makefile.config
CONFIG_HEADER = $(ROOT_PATH)/config.h

-include $(VERSION_DEF)
-include $(COMMON_MAKEFILE)
-include $(CONFIG_MAKEFILE)

KERNEL_PATH = $(ROOT_PATH)/kernel
USPACE_PATH = $(ROOT_PATH)/uspace
DIST_PATH = $(USPACE_PATH)/dist
DIST_OVERLAY_PATH = $(USPACE_PATH)/overlay
TOOLS_PATH = $(ROOT_PATH)/tools
DRVS_PATH = drv

MKARRAY = $(TOOLS_PATH)/mkarray.py
MKFAT = $(TOOLS_PATH)/mkfat.py
MKEXT4 = $(TOOLS_PATH)/mkext4.py
MKUIMAGE = $(TOOLS_PATH)/mkuimage.py

ifeq ($(PRECHECK),y)
	JOBFILE = $(TOOLS_PATH)/jobfile.py
	# XXX: Do not change the order of arguments.
	CC_JOB = $(JOBFILE) $(JOB) $(CC) $< -o $@
else
	CC_JOB = $(CC) $< -o $@
endif

DISTROOT = distroot
INITRD = initrd

INIT_TASKS = \
	$(USPACE_PATH)/srv/ns/ns \
	$(USPACE_PATH)/srv/loader/loader \
	$(USPACE_PATH)/app/init/init \
	$(USPACE_PATH)/srv/locsrv/locsrv \
	$(USPACE_PATH)/srv/bd/rd/rd \
	$(USPACE_PATH)/srv/vfs/vfs \
	$(USPACE_PATH)/srv/logger/logger

ifeq ($(RDFMT),tmpfs)
	INIT_TASKS += $(USPACE_PATH)/srv/fs/tmpfs/tmpfs
endif

ifeq ($(RDFMT),fat)
	INIT_TASKS += $(USPACE_PATH)/srv/fs/fat/fat
endif

ifeq ($(RDFMT),ext4fs)
	INIT_TASKS += $(USPACE_PATH)/srv/fs/ext4fs/ext4fs
endif

RD_SRVS_ESSENTIAL = \
	$(USPACE_PATH)/srv/hid/input/input \
	$(USPACE_PATH)/srv/hid/output/output \
	$(USPACE_PATH)/srv/hid/console/console \
	$(USPACE_PATH)/srv/devman/devman \
	$(USPACE_PATH)/srv/fs/locfs/locfs \
	$(USPACE_PATH)/srv/hid/compositor/compositor \
	$(USPACE_PATH)/srv/klog/klog

RD_SRVS_NON_ESSENTIAL = \
	$(USPACE_PATH)/srv/bd/file_bd/file_bd \
	$(USPACE_PATH)/srv/bd/sata_bd/sata_bd \
	$(USPACE_PATH)/srv/bd/vbd/vbd \
	$(USPACE_PATH)/srv/clipboard/clipboard \
	$(USPACE_PATH)/srv/fs/tmpfs/tmpfs \
	$(USPACE_PATH)/srv/fs/fat/fat \
	$(USPACE_PATH)/srv/fs/mfs/mfs \
	$(USPACE_PATH)/srv/fs/cdfs/cdfs \
	$(USPACE_PATH)/srv/fs/exfat/exfat \
	$(USPACE_PATH)/srv/fs/udf/udf \
	$(USPACE_PATH)/srv/fs/ext4fs/ext4fs \
	$(USPACE_PATH)/srv/hid/remcons/remcons \
	$(USPACE_PATH)/srv/hid/isdv4_tablet/isdv4_tablet \
	$(USPACE_PATH)/srv/hid/rfb/rfb \
	$(USPACE_PATH)/srv/net/dhcp/dhcp \
	$(USPACE_PATH)/srv/net/dnsrsrv/dnsrsrv \
	$(USPACE_PATH)/srv/net/ethip/ethip \
	$(USPACE_PATH)/srv/net/inetsrv/inetsrv \
	$(USPACE_PATH)/srv/net/loopip/loopip \
	$(USPACE_PATH)/srv/net/nconfsrv/nconfsrv \
	$(USPACE_PATH)/srv/net/slip/slip \
	$(USPACE_PATH)/srv/net/tcp/tcp \
	$(USPACE_PATH)/srv/net/udp/udp \
	$(USPACE_PATH)/srv/taskmon/taskmon \
	$(USPACE_PATH)/srv/test/chardev-test/chardev-test \
	$(USPACE_PATH)/srv/volsrv/volsrv

RD_DRVS_ESSENTIAL = \
	root/root \
	root/virt \
	fb/kfb

RD_DRVS_NON_ESSENTIAL = \
	test/test1 \
	test/test2 \
	test/test3 \
	nic/ne2k \
	nic/e1k \
	nic/rtl8139 \
	nic/rtl8169 \
	nic/ar9271 \
	nic/virtio-net \
	block/ahci

RD_DRV_CFG =

RD_DRVS_FW_NON_ESSENTIAL = \
	nic/ar9271

RD_LIBS =

ifeq ($(CONFIG_DEVEL_FILES), y)
	RD_LIBS += \
		$(USPACE_PATH)/lib/c/libc.a \
		$(USPACE_PATH)/lib/softint/libsoftint.a \
		$(USPACE_PATH)/lib/softfloat/libsoftfloat.a
endif

ifeq ($(CONFIG_BUILD_SHARED_LIBS), y)
	RD_LIBS += \
		$(USPACE_PATH)/lib/c/libc.so.0 \
		$(USPACE_PATH)/lib/softint/libsoftint.so.0 \
		$(USPACE_PATH)/lib/math/libmath.so.0 \
		$(USPACE_PATH)/lib/dltest/libdltest.so.0
endif

RD_APPS_ESSENTIAL = \
	$(USPACE_PATH)/app/bdsh/bdsh \
	$(USPACE_PATH)/app/getterm/getterm \
	$(USPACE_PATH)/app/kio/kio \
	$(USPACE_PATH)/app/vlaunch/vlaunch \
	$(USPACE_PATH)/app/vterm/vterm

RD_APPS_NON_ESSENTIAL = \
	$(USPACE_PATH)/app/barber/barber \
	$(USPACE_PATH)/app/bithenge/bithenge \
	$(USPACE_PATH)/app/blkdump/blkdump \
	$(USPACE_PATH)/app/bnchmark/bnchmark \
	$(USPACE_PATH)/app/contacts/contacts \
	$(USPACE_PATH)/app/corecfg/corecfg \
	$(USPACE_PATH)/app/cpptest/cpptest \
	$(USPACE_PATH)/app/devctl/devctl \
	$(USPACE_PATH)/app/dnscfg/dnscfg \
	$(USPACE_PATH)/app/dnsres/dnsres \
	$(USPACE_PATH)/app/download/download \
	$(USPACE_PATH)/app/edit/edit \
	$(USPACE_PATH)/app/fdisk/fdisk \
	$(USPACE_PATH)/app/gunzip/gunzip \
	$(USPACE_PATH)/app/inet/inet \
	$(USPACE_PATH)/app/kill/kill \
	$(USPACE_PATH)/app/killall/killall \
	$(USPACE_PATH)/app/loc/loc \
	$(USPACE_PATH)/app/mixerctl/mixerctl \
	$(USPACE_PATH)/app/modplay/modplay \
	$(USPACE_PATH)/app/logset/logset \
	$(USPACE_PATH)/app/mkfat/mkfat \
	$(USPACE_PATH)/app/mkexfat/mkexfat \
	$(USPACE_PATH)/app/mkext4/mkext4 \
	$(USPACE_PATH)/app/mkmfs/mkmfs \
	$(USPACE_PATH)/app/nic/nic \
	$(USPACE_PATH)/app/rcutest/rcutest \
	$(USPACE_PATH)/app/rcubench/rcubench \
	$(USPACE_PATH)/app/sbi/sbi \
	$(USPACE_PATH)/app/sportdmp/sportdmp \
	$(USPACE_PATH)/app/redir/redir \
	$(USPACE_PATH)/app/taskdump/taskdump \
	$(USPACE_PATH)/app/tester/tester \
	$(USPACE_PATH)/app/testread/testread \
	$(USPACE_PATH)/app/testwrit/testwrit \
	$(USPACE_PATH)/app/tetris/tetris \
	$(USPACE_PATH)/app/tmon/tmon \
	$(USPACE_PATH)/app/trace/trace \
	$(USPACE_PATH)/app/netecho/netecho \
	$(USPACE_PATH)/app/nterm/nterm \
	$(USPACE_PATH)/app/ping/ping \
	$(USPACE_PATH)/app/pkg/pkg \
	$(USPACE_PATH)/app/stats/stats \
	$(USPACE_PATH)/app/sysinfo/sysinfo \
	$(USPACE_PATH)/app/sysinst/sysinst \
	$(USPACE_PATH)/app/top/top \
	$(USPACE_PATH)/app/untar/untar \
	$(USPACE_PATH)/app/usbinfo/usbinfo \
	$(USPACE_PATH)/app/vol/vol \
	$(USPACE_PATH)/app/vuhid/vuh \
	$(USPACE_PATH)/app/mkbd/mkbd \
	$(USPACE_PATH)/app/websrv/websrv \
	$(USPACE_PATH)/app/date/date \
	$(USPACE_PATH)/app/vcalc/vcalc \
	$(USPACE_PATH)/app/vdemo/vdemo \
	$(USPACE_PATH)/app/viewer/viewer \
	$(USPACE_PATH)/app/df/df \
	$(USPACE_PATH)/app/fontviewer/fontviewer \
	$(USPACE_PATH)/app/wifi_supplicant/wifi_supplicant

ifeq ($(CONFIG_BUILD_SHARED_LIBS), y)
	RD_APPS_NON_ESSENTIAL += \
		$(USPACE_PATH)/app/dltest/dltest \
		$(USPACE_PATH)/app/dltests/dltests
endif

RD_TESTS = \
	$(USPACE_PATH)/lib/c/test-libc \
	$(USPACE_PATH)/lib/label/test-liblabel \
	$(USPACE_PATH)/lib/posix/test-libposix \
	$(USPACE_PATH)/lib/sif/test-libsif \
	$(USPACE_PATH)/lib/uri/test-liburi \
	$(USPACE_PATH)/lib/math/test-libmath \
	$(USPACE_PATH)/drv/bus/usb/xhci/test-xhci \
	$(USPACE_PATH)/app/bdsh/test-bdsh \
	$(USPACE_PATH)/srv/net/tcp/test-tcp \
	$(USPACE_PATH)/srv/volsrv/test-volsrv \

RD_DATA_ESSENTIAL = \
	$(USPACE_PATH)/app/bdsh/demo.txt

RD_DATA_NON_ESSENTIAL = \
	$(USPACE_PATH)/app/modplay/demo.xm \
	$(USPACE_PATH)/app/viewer/logo.tga


COMPONENTS = \
	$(KERNEL_PATH)/kernel.bin \
	$(INIT_TASKS) \
	$(INITRD).img

COMPONENTS_DEFLATE := $(addsuffix .deflate,$(notdir $(COMPONENTS)))

LINK = arch/$(BARCH)/_link.ld
COMP = component
COMPS = $(COMP)s

-include arch/$(BARCH)/Makefile.inc

ifeq ($(CONFIG_BAREBONE),y)
	RD_SRVS = $(RD_SRVS_ESSENTIAL)
	RD_APPS = $(RD_APPS_ESSENTIAL)
	RD_DRVS = $(RD_DRVS_ESSENTIAL)
	RD_DRVS_FW = $(RD_DRVS_FW_ESSENTIAL)
	RD_DATA = $(RD_DATA_ESSENTIAL)
else
	RD_SRVS = $(RD_SRVS_ESSENTIAL) $(RD_SRVS_NON_ESSENTIAL)
	RD_APPS = $(RD_APPS_ESSENTIAL) $(RD_APPS_NON_ESSENTIAL)
	RD_DRVS = $(RD_DRVS_ESSENTIAL) $(RD_DRVS_NON_ESSENTIAL)
	RD_DRVS_FW = $(RD_DRVS_FW_ESSENTIAL) $(RD_DRVS_FW_NON_ESSENTIAL)
	RD_DATA = $(RD_DATA_ESSENTIAL) $(RD_DATA_NON_ESSENTIAL)
endif

MODULES := $(notdir $(COMPONENTS))

BOOT_OUTPUT ?= $(ROOT_PATH)/image.boot
RAW ?= image.raw
JOB ?= image.job
MAP ?= image.map
BUILD ?= Makefile.build
