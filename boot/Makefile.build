#
# Copyright (c) 2006 Martin Decky
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# - Redistributions of source code must retain the above copyright
#   notice, this list of conditions and the following disclaimer.
# - Redistributions in binary form must reproduce the above copyright
#   notice, this list of conditions and the following disclaimer in the
#   documentation and/or other materials provided with the distribution.
# - The name of the author may not be used to endorse or promote products
#   derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

.PHONY: all clean depend

include Makefile.common

INCLUDES = -Igeneric/include -Iarch/$(KARCH)/include -Igenarch/include -I$(ROOT_PATH)/abi/arch/$(KARCH)/include -I$(ROOT_PATH)/abi/include
OPTIMIZATION = 3

DEFS = -DBOOT -DRELEASE=$(RELEASE) "-DCOPYRIGHT=$(COPYRIGHT)" "-DNAME=$(NAME)" -D__$(BITS)_BITS__ -D__$(ENDIANESS)__

AFLAGS = --fatal-warnings
LDFLAGS = -Wl,--fatal-warnings,--warn-common $(EXTRA_LDFLAGS)

COMMON_CFLAGS = $(INCLUDES) -O$(OPTIMIZATION) -imacros $(CONFIG_HEADER) \
	-ffreestanding -nostdlib \
	-fexec-charset=UTF-8 -finput-charset=UTF-8 -fno-common \
	-fdebug-prefix-map=$(realpath $(ROOT_PATH))=.

GCC_CFLAGS = -Wall -Wextra -Wno-unused-parameter -Wmissing-prototypes \
	-std=gnu99 -Werror-implicit-function-declaration -Wwrite-strings \
	-pipe

CLANG_CFLAGS = -Wall -Wextra -Wno-unused-parameter -Wmissing-prototypes \
	-Werror-implicit-function-declaration -Wwrite-strings \
	-pipe  -fno-stack-protector -fno-PIC

ifeq ($(CONFIG_DEBUG),y)
	COMMON_CFLAGS += -Werror
endif

ifeq ($(CONFIG_LINE_DEBUG),y)
	COMMON_CFLAGS += -g
endif

ifeq ($(COMPILER),clang)
	CFLAGS = $(COMMON_CFLAGS) $(CLANG_CFLAGS) $(EXTRA_CFLAGS)
else
	CFLAGS = $(COMMON_CFLAGS) $(GCC_CFLAGS) $(EXTRA_CFLAGS)
endif

OBJECTS := $(addsuffix .o,$(basename $(SOURCES)))
DEPENDS := $(addsuffix .d,$(basename $(SOURCES)))

ifeq ($(CONFIG_COMPRESSED_INIT),y)
	COMPONENTS := $(addsuffix .gz, $(COMPONENTS))
endif

all: $(VERSION_DEF) $(COMMON_MAKEFILE) $(COMMON_HEADER) $(CONFIG_MAKEFILE) $(CONFIG_HEADER) $(BOOT_OUTPUT)

clean:
	rm -f $(RAW) $(MAP)

-include $(DEPENDS)

AS_CFLAGS := $(addprefix -Xassembler ,$(AFLAGS))

$(BOOT_OUTPUT): $(RAW)
	$(OBJCOPY) -O $(BFD_OUTPUT) $< $@

$(RAW): $(OBJECTS) $(LINK)
	$(CC) $(CFLAGS) -Wl,-n $(LDFLAGS) -T $(LINK) -Wl,-M,-Map,$(MAP) -o $@ $(OBJECTS)

$(LINK): | depend
	$(CC) $(DEFS) $(CFLAGS) -D__ASSEMBLER__ -D__LINKER__ -E -x c $(LINK).in | grep -v "^\#" > $(LINK)

%.o: %.s | depend
	$(CC_JOB) -c -MD -MP $(DEFS) $(CFLAGS) $(AS_CFLAGS)

%.o: %.S | depend
	$(CC_JOB) -c -MD -MP $(DEFS) $(CFLAGS) $(AS_CFLAGS)

%.o: %.c | depend
	$(CC_JOB) -c -MD -MP $(DEFS) $(CFLAGS)

depend: $(PRE_DEPEND)

%.gz: %
	gzip -n -k -9 -f $<

$(COMPS).tar: $(COMPONENTS)
	tar --mtime='2032-01-01 00:00:00' --group=0 --owner=0 --no-acls --no-selinux --no-xattrs --format=ustar --transform 's/.*\///g' -cvf $@ $^

$(COMPS).o: $(COMPS).tar
	# Create empty object file.
	$(CC) -x c -c -o $@.new $(DEFS) $(CFLAGS) - </dev/null
	# Add .payload section to it.
	$(OBJCOPY) --add-section '.payload'=$< $@.new $@

include Makefile.initrd
