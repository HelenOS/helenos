--
-- SPDX-FileCopyrightText: 2010 Jiri Svoboda
--
-- SPDX-License-Identifier: BSD-3-Clause
--

class ArithmeticDemo is
	fun Main(), static is
		-- Test addition, multiplication and precedence.
		Console.Write("2*2 + 2*2 = ");
		Console.Write(2*2 + 2*2);
		Console.WriteLine(" (expected: 8)");

		-- Test subtraction, multiplication and precedence.
		Console.Write("1111 - 1 - 10 - 10*10 - 10*10*10 = ");
		Console.Write(1111 - 1 - 10 - 10*10 - 10*10*10);
		Console.WriteLine(" (expected: 0)");

		-- Test parenthesized sub-expressions.
		Console.Write("10 * (1 - 1) = ");
		Console.Write(10 * (1 - 1));
		Console.WriteLine(" (expected: 0)");

		-- Test unary plus and minus.
		Console.Write("(+1) - (-1) - (+(+1)) + (+(-1)) = ");
		Console.Write((+1) - (-1) - (+(+1)) + (+(-1)));
		Console.WriteLine(" (expected: 0)");

		-- Test signed multiplication.
		Console.Write("+1 * +1 = ");
		Console.Write(+1 * +1);
		Console.WriteLine(" (expected: 1)");

		Console.Write("-1 * -1 = ");
		Console.Write(-1 * -1);
		Console.WriteLine(" (expected: 1)");

		Console.Write("+1 * -1 = ");
		Console.Write(+1 * -1);
		Console.WriteLine(" (expected: -1)");

		Console.Write("-1 * +1 = ");
		Console.Write(-1 * +1);
		Console.WriteLine(" (expected: -1)");

		-- Test multiplication with large result.
		Console.Write("1000000 * 1000000 * 1000000 * 1000000 = ");
		Console.Write(1000000 * 1000000 * 1000000 * 1000000);
		Console.WriteLine(" (expected: 1000000000000000000000000)");

		-- Test large literals.
		Console.Write("1000000000000000000000000 = ");
		Console.Write(1000000000000000000000000);
		Console.WriteLine(" (expected: 1000000000000000000000000)");

		-- Test large factorials.
		var n : int;

		Console.WriteLine("Factorials:");
		n = 1;
		while n <= 40 do
			Console.WriteLine(Factorial(n));
			n = n + 1;
		end
	end

	-- Return factorial of n.
	fun Factorial(n : int) : int, static is
		var i : int;
		var val : int;

		i = 1;
		val = 1;

		while i <= n do
			val = val * i;
			i = i + 1;
		end

		return val;
	end
end
