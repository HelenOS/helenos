/*
 * Copyright (c) 2018 Jaroslav Jindrak
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * - Redistributions of source code must retain the above copyright
 *   notice, this list of conditions and the following disclaimer.
 * - Redistributions in binary form must reproduce the above copyright
 *   notice, this list of conditions and the following disclaimer in the
 *   documentation and/or other materials provided with the distribution.
 * - The name of the author may not be used to endorse or promote products
 *   derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef LIBCPP_CSTRING
#define LIBCPP_CSTRING


namespace std::hel
{
    extern "C" {
        #include <str.h>
    }
}

namespace std
{
    using std::hel::size_t;

    /* using std::hel::strcpy; */
    /* using std::hel::strncpy; */
    /* using std::hel::strcat; */
    /* using std::hel::strncat; */
    /* using std::hel::strxfrm; */

    /* using std::hel::strlen; */
    /* using std::hel::strcmp; */
    /* using std::hel::strncmp; */
    /* using std::hel::strcoll; */
    /* using std::hel::strchr; */
    /* using std::hel::strrchr; */
    /* using std::hel::strspn; */
    /* using std::hel::strcspn; */
    /* using std::hel::strpbrk; */
    /* using std::hel::strstr; */
    /* using std::hel::strok; */

    /* using std::hel::memchr; */
    using std::hel::memcmp;
    using std::hel::memset;
    using std::hel::memcpy;
    using std::hel::memmove;

    /* using std::hel::strerror; */
}

using std::hel::size_t;

/* using std::hel::strcpy; */
/* using std::hel::strncpy; */
/* using std::hel::strcat; */
/* using std::hel::strncat; */
/* using std::hel::strxfrm; */

/* using std::hel::strlen; */
/* using std::hel::strcmp; */
/* using std::hel::strncmp; */
/* using std::hel::strcoll; */
/* using std::hel::strchr; */
/* using std::hel::strrchr; */
/* using std::hel::strspn; */
/* using std::hel::strcspn; */
/* using std::hel::strpbrk; */
/* using std::hel::strstr; */
/* using std::hel::strok; */

/* using std::hel::memchr; */
using std::hel::memcmp;
using std::hel::memset;
using std::hel::memcpy;
using std::hel::memmove;

/* using std::hel::strerror; */

#endif
